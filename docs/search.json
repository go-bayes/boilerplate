[{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://go-bayes.github.io/boilerplate/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://go-bayes.github.io/boilerplate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://go-bayes.github.io/boilerplate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2024). boilerplate. doi:10.5281/zenodo.13370825, R package version 0.0.92 GNU General Public License v3.0, https://go-bayes.github.io/biolerplate/.","code":"@Manual{,   title = {boilerplate},   author = {Joseph A Bulbulia},   year = {2024},   note = {R package version 0.0.92 GNU General Public License v3.0},   url = {https://go-bayes.github.io/biolerplate/},   doi = {10.5281/zenodo.13370825}, }"},{"path":"https://go-bayes.github.io/boilerplate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Managing and Compiling Manuscript Templates","text":"can install development version boilerplate GitHub :","code":"# Install the devtools package if you don't have it already install.packages(\"devtools\")  # Install boilerplate from GitHub devtools::install_github(\"go-bayes/boilerplate\")"},{"path":"https://go-bayes.github.io/boilerplate/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Managing and Compiling Manuscript Templates","text":"basic example shows connect boilerplate database create necessary tables:","code":"library(boilerplate) library(here)  # set path to data folder measures_path <-  here::here(\"boilerplate\", 'data')  # open gui to enter and save measures data boilerplate_manage_measures(measures_path = measures_path)  # create measures report (assuming measures data saved as 'measures_data.rds') measure_data <- readRDS(here::here(measures_path, \"measure_data.rds\"))  # baseline variables baseline_vars <- c(\"age\", \"male_binary\", \"parent_binary\")  # exposure variable (intervention) exposure_var <- \"political_conservative\"  # outcomes, perhaps defined by domains outcomes_health <- c(\"smoker_binary\", \"hlth_bmi\", \"log_hours_exercise\") outcomes_psychological <- c(\"hlth_fatigue\", \"kessler_latent_anxiety\") outcomes_social <- c(\"belong\", \"neighbourhood_community\")  # variable definitions: option 1 outcome_vars <- c(outcomes_health, outcomes_psychological, outcomes_social)  # variable definitions: option 2 using `boilerplate_report_variables` all_outcomes <- list(   health = outcomes_health,   psychological = outcomes_psychological,   social = outcomes_social )  # view appendix_text_version_1 <- boilerplate::boilerplate_report_measures(   baseline_vars = baseline_vars,   exposure_var = exposure_var,   outcome_vars = outcome_vars,   measure_data = measure_data )  # view cat(appendix_text_version_1)   # another option appendix_text_version_2 <- boilerplate::boilerplate_report_variables(   exposure_var = exposure_var,   outcome_vars = all_outcomes,   appendices_measures = \"Appendix C\",   measure_data = measure_data ) cat(appendix_text_version_2)"},{"path":"https://go-bayes.github.io/boilerplate/index.html","id":"code","dir":"","previous_headings":"","what":"Code","title":"Tools for Managing and Compiling Manuscript Templates","text":"Go : https://github.com/go-bayes/boilerplate","code":""},{"path":[]},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage Boilerplate Measures Database — boilerplate_manage_measures","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"function provides command-line interface managing database boilerplate measures. allows users create new databases, open existing ones, perform various operations measures within database.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"","code":"boilerplate_manage_measures(measures_path = NULL)"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"measures_path character string specifying path directory measures database files stored. NULL (default), function use current working directory determined ::().","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"function return value. runs interactive command-line interface database management.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"function provides following main functionalities: Create new measures database Open existing measures database List available .rds files specified directory Add, delete, modify, copy measures Create backups measures database Perform batch edits measures","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"function uses rlang, , cli, R6 packages.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_manage_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage Boilerplate Measures Database — boilerplate_manage_measures","text":"","code":"if (FALSE) { # \\dontrun{ # Run the function with default path (current working directory) boilerplate_manage_measures()  # Run the function with a specific path boilerplate_manage_measures(\"/path/to/measures/directory\") } # }"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_additional_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","title":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","text":"function generates markdown-formatted additional sections methods, including Sensitivity Analysis, Scope Interventions, Evidence Change Treatment Variable. uses Quarto-compatible figure table references allows inclusion R code blocks.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_additional_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","text":"","code":"boilerplate_report_additional_sections(   sensitivity_analysis = list(description =     \"To assess the sensitivity of results to unmeasured confounding, we report VanderWeele and Ding's \\\"E-value\\\" in all analyses [@vanderweele2017]. The E-value quantifies the minimum strength of association (on the risk ratio scale) that an unmeasured confounder would need to have with both the exposure and the outcome (after considering the measured covariates) to explain away the observed exposure-outcome association [@vanderweele2020; @linden2020EVALUE]. To evaluate the strength of evidence, we use the bound of the E-value 95% confidence interval closest to 1. This provides a clear metric for understanding the robustness of our findings in the presence of potential unmeasured confounding.\"),   scope_interventions = list(figure_ref = \"@fig-hist\", code =     \"\\n```{r}\\n#| label: fig-hist\\n#| fig-cap: \\\" \\\"\\n#| eval: true\\n#| include: true\\n#| echo: false\\n#| fig-width: 10\\n#| fig-height: 12\\ngraph_histogram <- margot::here_read(\\\"graph_histogram\\\")\\ngraph_histogram + theme_classic()\\n```\\n\"),   evidence_change = list(table_ref = \"@tbl-transition\", code =     \"\\n```{r}\\n#| label: tbl-transition\\n#| tbl-cap: \\\"TBA.\\\"\\n#| eval: true\\n#| echo: false\\ntransition_table <- margot::here_read(\\\"transition_table\\\")\\ntransition_table$table\\n```\\n\"),   ... )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_additional_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","text":"sensitivity_analysis list containing details Sensitivity Analysis section. include 'description' element. Default provides description E-value method. scope_interventions list containing details Scope Interventions section. include 'figure_ref' 'code' elements. 'figure_ref' string figure reference, 'code' string containing R code block generating figure. evidence_change list containing details Evidence Change section. include 'table_ref' 'code' elements. 'table_ref' string table reference, 'code' string containing R code block generating table. ... Additional arguments (used version).","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_additional_sections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","text":"character string containing markdown-formatted additional sections, including R code blocks figure table generation.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_additional_sections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Additional Sections for Methods — boilerplate_report_additional_sections","text":"","code":"boilerplate_report_additional_sections() #> ### Sensitivity Analysis Using the E-value #>  #> To assess the sensitivity of results to unmeasured confounding, we report VanderWeele and Ding's \"E-value\" in all analyses [@vanderweele2017]. The E-value quantifies the minimum strength of association (on the risk ratio scale) that an unmeasured confounder would need to have with both the exposure and the outcome (after considering the measured covariates) to explain away the observed exposure-outcome association [@vanderweele2020; @linden2020EVALUE]. To evaluate the strength of evidence, we use the bound of the E-value 95% confidence interval closest to 1. This provides a clear metric for understanding the robustness of our findings in the presence of potential unmeasured confounding. #>  #> ### Scope of Interventions #>  #> To illustrate the magnitude of the shift interventions we contrast, we provide histograms in @fig-hist, that display the distribution of treatments during the treatment wave. #>  #>  #> ```{r} #> #| label: fig-hist #> #| fig-cap: \" \" #> #| eval: true #> #| include: true #> #| echo: false #> #| fig-width: 10 #> #| fig-height: 12 #> graph_histogram <- margot::here_read(\"graph_histogram\") #> graph_histogram + theme_classic() #> ``` #>  #>  #> {{< pagebreak >}} #>  #> ### Evidence for Change in the Treatment Variable #>  #> @tbl-transition clarifies the change in the treatment variable from the baseline wave to the baseline + 1 wave across the sample. Assessing change in a variable is essential for evaluating the positivity assumption and recovering evidence for the incident exposure effect of the treatment variable [@vanderweele2020; @danaei2012; @hernan2024WHATIF]. #>  #>  #> ```{r} #> #| label: tbl-transition #> #| tbl-cap: \"TBA.\" #> #| eval: true #> #| echo: false #> transition_table <- margot::here_read(\"transition_table\") #> transition_table$table #> ``` #>  #>  #> {{< pagebreak >}}  # Custom figure and table references with R code blocks boilerplate_report_additional_sections(   scope_interventions = list(     figure_ref = \"@fig-custom-hist\",     code = ' ```{r} #| label: fig-custom-hist #| fig-cap: \"Distribution of treatments\" #| eval: true #| include: true #| echo: false graph_histogram <- margot::here_read(\"graph_histogram\") graph_histogram + theme_classic() ``` '   ),   evidence_change = list(     table_ref = \"@tbl-custom-transition\",     code = ' ```{r} #| label: tbl-custom-transition #| tbl-cap: \"Treatment variable changes\" #| eval: true #| echo: false transition_table <- margot::here_read(\"transition_table\") transition_table$table ``` '   ) ) #> ### Sensitivity Analysis Using the E-value #>  #> To assess the sensitivity of results to unmeasured confounding, we report VanderWeele and Ding's \"E-value\" in all analyses [@vanderweele2017]. The E-value quantifies the minimum strength of association (on the risk ratio scale) that an unmeasured confounder would need to have with both the exposure and the outcome (after considering the measured covariates) to explain away the observed exposure-outcome association [@vanderweele2020; @linden2020EVALUE]. To evaluate the strength of evidence, we use the bound of the E-value 95% confidence interval closest to 1. This provides a clear metric for understanding the robustness of our findings in the presence of potential unmeasured confounding. #>  #> ### Scope of Interventions #>  #> To illustrate the magnitude of the shift interventions we contrast, we provide histograms in @fig-custom-hist, that display the distribution of treatments during the treatment wave. #>  #>  #> ```{r} #> #| label: fig-custom-hist #> #| fig-cap: \"Distribution of treatments\" #> #| eval: true #> #| include: true #> #| echo: false #> graph_histogram <- margot::here_read(\"graph_histogram\") #> graph_histogram + theme_classic() #> ``` #>  #>  #> {{< pagebreak >}} #>  #> ### Evidence for Change in the Treatment Variable #>  #> @tbl-custom-transition clarifies the change in the treatment variable from the baseline wave to the baseline + 1 wave across the sample. Assessing change in a variable is essential for evaluating the positivity assumption and recovering evidence for the incident exposure effect of the treatment variable [@vanderweele2020; @danaei2012; @hernan2024WHATIF]. #>  #>  #> ```{r} #> #| label: tbl-custom-transition #> #| tbl-cap: \"Treatment variable changes\" #> #| eval: true #> #| echo: false #> transition_table <- margot::here_read(\"transition_table\") #> transition_table$table #> ``` #>  #>  #> {{< pagebreak >}}"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"function generates markdown-formatted section describing causal interventions contrasts causal inference study. details interventions considered approach contrasts (pairwise, null, custom).","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"","code":"boilerplate_report_causal_interventions(   causal_interventions,   exposure_var,   contrasts = \"pairwise\",   null_intervention = NULL )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"causal_interventions character vector specifying causal interventions. Use \"exposure_var\" placeholder exposure variable name. exposure_var character string specifying name exposure variable. contrasts character string specifying type contrasts. Options \"pairwise\", \"null\", \"custom\". Default \"pairwise\". null_intervention character string specifying null intervention using \"null\" contrasts. Default NULL.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"character string containing markdown-formatted section causal interventions contrasts.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"function replaces \"exposure_var\" causal_interventions null_intervention actual name exposure variable. contrasts: \"pairwise\": Indicates interventions compared . \"null\": Indicates interventions compared specified null intervention. \"custom\": Indicates custom contrasts used, defined elsewhere.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_causal_interventions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Causal Interventions and Contrasts Section for Methods — boilerplate_report_causal_interventions","text":"","code":"boilerplate_report_causal_interventions(   causal_interventions = c(\"Increase exposure_var\", \"Do not change exposure_var\"),   exposure_var = \"political_conservative\",   contrasts = \"null\",   null_intervention = \"Do not change exposure_var\" ) #> ### Causal Interventions and Contrasts #>  #> #### Interventions #> This study considers the following causal interventions on the exposure variable 'political_conservative': #>  #> -  Increase political_conservative #> -  Do not change political_conservative #>  #> #### Contrasts #> We compare each intervention to the null intervention: \"Do not change political_conservative\". This approach allows us to evaluate the effect of each intervention relative to a baseline scenario. #>  #> This approach to defining interventions and contrasts allows us to systematically evaluate the causal effects of interest in our study."},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_confounding_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Confounding Control Description — boilerplate_report_confounding_control","title":"Generate Confounding Control Description — boilerplate_report_confounding_control","text":"Generate Confounding Control Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_confounding_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Confounding Control Description — boilerplate_report_confounding_control","text":"","code":"boilerplate_report_confounding_control(   appendix_ref = \"B\",   protocol_url = \"https://osf.io/ce4t9/\" )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_confounding_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Confounding Control Description — boilerplate_report_confounding_control","text":"appendix_ref Character string specifying appendix reference covariates. protocol_url Character string specifying URL study protocol.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_confounding_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Confounding Control Description — boilerplate_report_confounding_control","text":"character string containing confounding control description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_eligibility_criteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Eligibility Criteria Description — boilerplate_report_eligibility_criteria","title":"Generate Eligibility Criteria Description — boilerplate_report_eligibility_criteria","text":"Generate Eligibility Criteria Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_eligibility_criteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Eligibility Criteria Description — boilerplate_report_eligibility_criteria","text":"","code":"boilerplate_report_eligibility_criteria(   inclusion_criteria,   exclusion_criteria,   n_participants,   baseline_wave )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_eligibility_criteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Eligibility Criteria Description — boilerplate_report_eligibility_criteria","text":"inclusion_criteria Character vector specifying inclusion criteria. exclusion_criteria Character vector specifying exclusion criteria. n_participants Numeric value indicating number participants meeting criteria.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_eligibility_criteria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Eligibility Criteria Description — boilerplate_report_eligibility_criteria","text":"character string containing eligibility criteria description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_identification_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Identification Assumptions Description — boilerplate_report_identification_assumptions","title":"Generate Identification Assumptions Description — boilerplate_report_identification_assumptions","text":"Generate Identification Assumptions Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_identification_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Identification Assumptions Description — boilerplate_report_identification_assumptions","text":"","code":"boilerplate_report_identification_assumptions(exposure_var)"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_identification_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Identification Assumptions Description — boilerplate_report_identification_assumptions","text":"exposure_var Character string specifying primary exposure variable.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_identification_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Identification Assumptions Description — boilerplate_report_identification_assumptions","text":"character string containing identification assumptions description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bibliography of Measures — boilerplate_report_measures","title":"Create a Bibliography of Measures — boilerplate_report_measures","text":"function generates formatted bibliography measures used study, including details questions citations.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bibliography of Measures — boilerplate_report_measures","text":"","code":"boilerplate_report_measures(   all_vars = NULL,   baseline_vars = NULL,   exposure_var = NULL,   outcome_vars = NULL,   measure_data,   custom_titles = NULL,   print_keywords = FALSE,   print_waves = FALSE )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bibliography of Measures — boilerplate_report_measures","text":"all_vars character vector variable names, TRUE use variables baseline_vars, exposure_var, outcome_vars. NULL, function use variables provided baseline_vars, exposure_var, outcome_vars. baseline_vars character vector baseline variable names. Ignored all_vars NULL. exposure_var character string exposure variable name. Ignored all_vars NULL. outcome_vars character vector outcome variable names. Ignored all_vars NULL. measure_data list containing information measure. list include elements \"description\" \"reference\" variable. custom_titles named list custom titles variables (optional). names match variable names all_vars. print_keywords Logical, whether print keywords measure (default: FALSE). print_waves Logical, whether print wave information measure (default: FALSE).","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_measures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bibliography of Measures — boilerplate_report_measures","text":"character string containing formatted bibliography, suitable inclusion Markdown document.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_measures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bibliography of Measures — boilerplate_report_measures","text":"","code":"# Example 1: Using separate variable lists baseline_vars <- c(\"age\", \"male_binary\", \"parent_binary\") exposure_var <- \"political_conservative\" outcome_vars <- c(\"smoker_binary\", \"hlth_bmi\", \"log_hours_exercise\",                   \"hlth_fatigue\", \"kessler_latent_anxiety\",                   \"belong\", \"neighbourhood_community\")  # Assuming measure_data is a list with information about each variable appendix_text_1 <- boilerplate_report_measures(   baseline_vars = baseline_vars,   exposure_var = exposure_var,   outcome_vars = outcome_vars,   measure_data = measure_data ) #> Error in eval(expr, envir, enclos): object 'measure_data' not found  # Example 2: Using all_vars all_vars <- c(baseline_vars, exposure_var, outcome_vars) appendix_text_2 <- boilerplate_report_measures(   all_vars = all_vars,   measure_data = measure_data ) #> Error in eval(expr, envir, enclos): object 'measure_data' not found  # Example 3: Using custom titles and printing keywords custom_titles <- list(age = \"Participant Age\", male_binary = \"Gender (Male)\") appendix_text_3 <- boilerplate_report_measures(   all_vars = all_vars,   measure_data = measure_data,   custom_titles = custom_titles,   print_keywords = TRUE ) #> Error in eval(expr, envir, enclos): object 'measure_data' not found"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","title":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","text":"function generates comprehensive methods section research paper, including details sample, variables, causal interventions, identification assumptions, target population, eligibility criteria, confounding control, missing data handling, statistical estimators, additional sections like sensitivity analysis scope interventions.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","text":"","code":"boilerplate_report_methods(   exposure_var,   outcome_vars,   n_total,   baseline_wave,   exposure_wave,   outcome_wave,   baseline_missing_data_proportion,   sections_to_include = \"all\",   appendices_measures = NULL,   ... )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","text":"exposure_var Character string specifying primary exposure variable. outcome_vars named list character vectors specifying outcome variables domain. n_total Numeric value indicating total number participants study. baseline_wave Character string specifying baseline wave study. exposure_wave Character string specifying exposure wave study. outcome_wave Character string specifying outcome wave study. baseline_missing_data_proportion Numeric value indicating proportion missing data baseline. sections_to_include Character vector specifying sections include output. Default '', includes available sections. Use 'list' see available sections. appendices_measures Character string specifying appendix detailed variable descriptions can found. ... Additional arguments passed helper functions. measure_data list containing information measure.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","text":"sections_to_include 'list', returns character string containing generated methods section markdown format. sections_to_include 'list', returns character vector available sections.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Methods Section for a Causal Inference Study — boilerplate_report_methods","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcomes by domain outcomes_health <- c(\"smoker_binary\", \"hlth_bmi\", \"log_hours_exercise\") outcomes_psychological <- c(\"hlth_fatigue\", \"kessler_latent_anxiety\") outcomes_social <- c(\"belong\", \"neighbourhood_community\")  # Combine all outcomes into a single list all_outcomes <- list(   health = outcomes_health,   psychological = outcomes_psychological,   social = outcomes_social )  # Define the exposure variable exposure_var <- \"political_conservative\"  # Load your measure_data measure_data <- readRDS(here::here(\"boilerplate\", \"data\", \"measure_data.rds\"))  # Generate methods text methods_text <- boilerplate_report_methods(   exposure_var = exposure_var,   outcome_vars = all_outcomes,   measure_data = measure_data,   n_total = 47000,   baseline_wave = \"NZAVS time 10, years 2018-2019\",   exposure_wave = \"NZAVS time 11, years 2019-2020\",   outcome_wave = \"NZAVS time 12, years 2020-2021\",   baseline_missing_data_proportion = 0.15,   appendices_measures = \"C\",   causal_interventions = list(interventions = c(\"Increase exposure_var\", \"Do not change exposure_var\")),   contrasts = \"null\",   null_intervention = \"Do not change exposure_var\",   sample = list(appendices = \"A-C\"),   statistical_estimator = list(estimators = c(\"lmtp\", \"grf\")),   inclusion_criteria = c(     \"Enrolled in the 2018 wave of the New Zealand Attitudes and Values Study (NZAVS time 10).\",     \"Missing covariate data at baseline was permitted, and the data was subjected to imputation methods to reduce bias.\"   ),   exclusion_criteria = c(     \"Did not answer the political conservative question at NZAVS time 10 and time 11.\"   ),   n_participants = 32451,   confounding_control = list(appendix_ref = \"B\", protocol_url = \"https://osf.io/ce4t9/\"),   additional_sections = list(     sensitivity_analysis = list(       description = \"We use the E-value method to assess sensitivity to unmeasured confounding.\"     ),     scope_interventions = list(figure_ref = \"@fig-custom-hist\"),     evidence_change = list(table_ref = \"@tbl-custom-transition\")   ) )  # Print the result cat(methods_text) } # }"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Missing Data Handling Description — boilerplate_report_missing_data","title":"Generate Missing Data Handling Description — boilerplate_report_missing_data","text":"Generate Missing Data Handling Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Missing Data Handling Description — boilerplate_report_missing_data","text":"","code":"boilerplate_report_missing_data(   estimators = c(\"lmtp\"),   grf_appendix = \"C\",   baseline_wave,   exposure_wave,   outcome_wave,   baseline_missing_data_proportion )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Missing Data Handling Description — boilerplate_report_missing_data","text":"estimators Character vector specifying statistical estimators used. grf_appendix Character string specifying appendix GRF missing data handling. baseline_wave Character string specifying baseline wave study. exposure_wave Character string specifying exposure wave study. outcome_wave Character string specifying outcome wave study. baseline_missing_data_proportion Numeric value indicating percentage missing data baseline.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Missing Data Handling Description — boilerplate_report_missing_data","text":"character string containing missing data handling description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Missing Data Handling Description — boilerplate_report_missing_data","text":"","code":"missing_data_text <- boilerplate_report_missing_data(   estimators = c(\"lmtp\", \"grf\"),   grf_appendix = \"D\",   baseline_wave = \"NZAVS time 10, years 2018-2019\",   exposure_wave = \"NZAVS time 11, years 2019-2020\",   outcome_wave = \"NZAVS time 12, years 2020-2021\",   baseline_missing_data_proportion = 15 )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Sample Description — boilerplate_report_sample","title":"Generate Sample Description — boilerplate_report_sample","text":"Generate Sample Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Sample Description — boilerplate_report_sample","text":"","code":"boilerplate_report_sample(   n_total,   appendices_sample = \"B-D\",   custom_template = NULL,   replacements = list(),   baseline_wave,   exposure_wave,   outcome_wave )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Sample Description — boilerplate_report_sample","text":"n_total Numeric value indicating total number participants. appendices_sample Character string specifying appendices containing sample data. custom_template Character string containing custom template sample description. Use placeholders like n_total appendices_sample variable insertion. replacements Named list additional custom replacements template.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Sample Description — boilerplate_report_sample","text":"character string containing sample description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Sample Description — boilerplate_report_sample","text":"","code":"# Using default template boilerplate_report_sample(n_total = 47000, appendices_sample = \"A-C\") #> Error in boilerplate_report_sample(n_total = 47000, appendices_sample = \"A-C\"): argument \"baseline_wave\" is missing, with no default  # Using custom template custom_template <- \" ### Study Sample This study used data from {{n_total}} participants in the NZAVS. Appendices {{appendices_sample}} contain detailed data summaries. {{custom_info}} \" boilerplate_report_sample(   n_total = 47000,   appendices_sample = \"A-C\",   custom_template = custom_template,   replacements = list(custom_info = \"Additional custom information here.\") ) #> Error in boilerplate_report_sample(n_total = 47000, appendices_sample = \"A-C\",     custom_template = custom_template, replacements = list(custom_info = \"Additional custom information here.\")): argument \"baseline_wave\" is missing, with no default"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_statistical_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Statistical Estimator Description — boilerplate_report_statistical_estimator","title":"Generate Statistical Estimator Description — boilerplate_report_statistical_estimator","text":"Generate Statistical Estimator Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_statistical_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Statistical Estimator Description — boilerplate_report_statistical_estimator","text":"","code":"boilerplate_report_statistical_estimator(estimators = \"lmtp\")"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_statistical_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Statistical Estimator Description — boilerplate_report_statistical_estimator","text":"estimators Character vector specifying statistical estimators used.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_statistical_estimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Statistical Estimator Description — boilerplate_report_statistical_estimator","text":"character string containing statistical estimator description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_target_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Target Population Description — boilerplate_report_target_population","title":"Generate Target Population Description — boilerplate_report_target_population","text":"Generate Target Population Description","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_target_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Target Population Description — boilerplate_report_target_population","text":"","code":"boilerplate_report_target_population(   statistical_estimator = \"lmtp\",   baseline_wave )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_target_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Target Population Description — boilerplate_report_target_population","text":"statistical_estimator Character string specifying statistical estimator used.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_target_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Target Population Description — boilerplate_report_target_population","text":"character string containing target population description markdown format.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Variables Section for Methods — boilerplate_report_variables","title":"Generate Variables Section for Methods — boilerplate_report_variables","text":"function wrapper around boilerplate_measures() generates markdown-formatted section describing variables used study. ignores baseline variables includes optional reference appendix.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Variables Section for Methods — boilerplate_report_variables","text":"","code":"boilerplate_report_variables(   exposure_var,   outcome_vars,   measure_data,   appendices_measures = NULL,   ... )"},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Variables Section for Methods — boilerplate_report_variables","text":"exposure_var character string specifying name exposure variable. outcome_vars named list character vectors specifying outcome variables domain. measure_data list containing information measure. appendices_measures optional character string appendix reference. NULL, reference included. custom_titles optional named list custom titles measures. print_waves logical value indicating whether print wave information. Default FALSE.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Variables Section for Methods — boilerplate_report_variables","text":"character string containing markdown-formatted section variables.","code":""},{"path":"https://go-bayes.github.io/boilerplate/reference/boilerplate_report_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Variables Section for Methods — boilerplate_report_variables","text":"","code":"if (FALSE) { # \\dontrun{ # Define outcomes by domain outcomes_health <- c(\"smoker_binary\", \"hlth_bmi\", \"log_hours_exercise\") outcomes_psychological <- c(\"hlth_fatigue\", \"kessler_latent_anxiety\") outcomes_social <- c(\"belong\", \"neighbourhood_community\") all_outcomes <- list(   health = outcomes_health,   psychological = outcomes_psychological,   social = outcomes_social ) # Define the exposure variable exposure_var <- \"political_conservative\" # Load your measure_data measure_data <- readRDS(here::here(\"boilerplate\", \"data\", \"measure_data.rds\")) # Call the function result <- boilerplate_report_variables(   exposure_var = exposure_var,   outcome_vars = all_outcomes,   measure_data = measure_data,   appendices_measures = \"Appendix C\" ) # Print the result cat(result) } # }"},{"path":[]},{"path":"https://go-bayes.github.io/boilerplate/news/index.html","id":"id_24-08-2024-boilerplate-0010-alpha","dir":"Changelog","previous_headings":"","what":"[24-08-2024] boilerplate 0.0.1.0-alpha","title":"[24-08-2024] boilerplate 0.0.1.0-alpha","text":"alpha release doi: 10.5281/zenodo.13370816","code":""},{"path":"https://go-bayes.github.io/boilerplate/news/index.html","id":"id_24-08-2024-boilerplate-00092","dir":"Changelog","previous_headings":"","what":"[24-08-2024] boilerplate 0.0.0.92","title":"[24-08-2024] boilerplate 0.0.0.92","text":"boilerplate_report_additional_sections() boilerplate_report_confounding_control() boilerplate_report_eligibility_criteria() boilerplate_report_identification_assumptions() boilerplate_report_methods() boilerplate_report_missing_data() boilerplate_report_sample() boilerplate_report_statistical_estimator() boilerplate_report_target_population()","code":""},{"path":"https://go-bayes.github.io/boilerplate/news/index.html","id":"id_24-08-2024-boilerplate-00091","dir":"Changelog","previous_headings":"","what":"[24-08-2024] boilerplate 0.0.0.91","title":"[24-08-2024] boilerplate 0.0.0.91","text":"boilerplate_manage_measures(): simple gui input measures, saves .rds files boilerplate_report_measures(): report appendix measures items described. boilerplate_report_causal_interventions(): report causal contrasts boilerplate_report_variables():report variables methods section (exposure/ outcomes)","code":""},{"path":[]},{"path":"https://go-bayes.github.io/boilerplate/news/index.html","id":"new-0-0-0-9","dir":"Changelog","previous_headings":"","what":"New","title":"[24-08-2024] boilerplate 0.0.0.9","text":"first package commit","code":""}]
